(function() {

    return function (req,res) {

        var body = [];
        req.on('data', function (data) {
            body.push(data);
            // Too much POST data, kill the connection!
            // 1e6 === 1 * Math.pow(10, 6) === 1 * 1000000 ~~~ 1MB
            if (body.join("").length > 1e4) req.connection.destroy();
        });

        req.on('end', function () {
            var qs = require('querystring');
            var post = qs.parse(body.join(""));
            // ffmpeg call
            if(!(req.session.logged && req.session.level == 0)) {
                res.send(JSON.stringify({result:false,msg:"not logged."}));
                return;
            }
            if(!("target" in post)) {
                res.json({result:false,msg : "missing params."});
                return;
            }
            // basic output of draw -> level2 create a folder for each task
            var spawn = require('child_process').spawn;
            var compiler = "C:\\ffmpeg\\bin\\ffmpeg.exe";
            var cargs = [
                "-i","private\\user\\root\\"+post.target+"\\test.mp3",
                "-i","private\\user\\root\\"+post.target+"\\picture_%d.jpeg",
                "private\\user\\root\\"+post.target+"\\video.avi"
            ];
            var child = spawn(compiler, cargs);
            var data = [];
            child.stderr.on("data", function (chunk) {
                data.push(chunk.toString("ascii"));
            });
            child.stdout.on('data', function(chunk) {
                data.push(chunk.toString("ascii"));
            });
            child.on('exit', (code) => {
                if(code !=0) {
                    res.json({result:false,code:code,msg:data.join("")});
                } else {
                    res.json({result:true,msg:data.join("")});
                    return;
                }
            });
            
        });
    };
})();