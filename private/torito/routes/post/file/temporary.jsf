(function() {
    return function (req,res) {
        var body = [];
        req.on('data', function (data) {
            if(!(req.session.logged)) {
                req.connection.destroy();
                return;
            }
            body.push(data);
            // Too much POST data, kill the connection!
            // 1e6 === 1 * Math.pow(10, 6) === 1 * 1000000 ~~~ 1MB
            if (body.join("").length > 1e6) req.connection.destroy();
        });
        req.on('end', function () {

            var qs = require('querystring');
            var post = qs.parse(body.join(""));

            function guid() {
                function s4() {
                    return Math.floor((1 + Math.random()) * 0x10000) .toString(16) .substring(1);
                }
                return s4() + s4() + '-' + s4() + '-' + s4() + '-' +  s4() + '-' + s4() + s4() + s4();
            }
            if(!(req.session.logged) || (req.session.level != 0)) {
                res.json({result:false,msg:"not logged."});
                res.end();
                return;
            }

            if(!("data" in post)) {
                res.json({result:false,msg:"not logged."});
                res.end();
                return;
            }

            target = ["session","temporary"];
            var p = req;
            for(var x = 0; x < target.length;x++) {
                if(target[x] in p) {
                    p = p[target[x]];
                } else {
                    p[target[x]] = {};
                    p = p[target[x]];
                }
            }
            target = p;

            var id = guid();
            while(id in p) {
                id = guid();
            }

            p[id] = {
                value : mod.codecs.hex2str( post.data ),
                date : new Date()
            }
            
            res.json({result:true,value:id});
            res.end();
            return;

        });
    };
})();