(function(){
	return function(req,res){ 
	    var body = [];
        req.on('data', function (data) {
            body.push(data);
            // Too much POST data, kill the connection!
            // 1e6 === 1 * Math.pow(10, 6) === 1 * 1000000 ~~~ 1MB
            if (body.join("").length > 1e2) req.connection.destroy();
        });
        req.on('end', function () {
            var qs = require('querystring');
            var post = qs.parse(body.join(""));
            
            var acl_table_file = mod.torito.paths.server.acl + "/index.json";
            if(req.session.logged && req.session.level == 0) {
                if(!("username" in post)) {
                    res.json({result:false});
                    res.end();
                    return;
                }
                // username checking
                if(post.username.indexOf("/")!=-1) {
                    res.json({result:false,message:"invalid name"});
                    res.end();
                    return;
                }
                if("username" in post && "password" in post && "level" in post) {
                    // install acl
                    var table = mod.fs.readFileSync(acl_table_file,"utf8");
                    table = JSON.parse(table);
                    if(post.username in table.users) {
                        res.json({result:false});
                        res.end();
                        return;
                    }
                    table.users[ post.username ] = {
                        password : post.password,
                        level : parseInt(post.level)
                    };
                    mod.fs.writeFileSync(acl_table_file,JSON.stringify(table),"utf8");

                    // create user folder
                    mod.fs.mkdirSync("./private/user/" + post.username);
                    
                    // create route of user, that route, routes to user router

                    res.json({result:true});
                    res.end();
                    return;


                }
                
            } else {
                res.json({result:false,logged:req.session.logged,level:req.session.level});
                res.end();
                return;
            }
        });
    };
})();