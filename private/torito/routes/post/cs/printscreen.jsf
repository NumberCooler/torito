(function() {
    return function (req,res) {

        var body = [];
        req.on('data', function (data) {
            body.push(data);
            // Too much POST data, kill the connection!
            // 1e6 === 1 * Math.pow(10, 6) === 1 * 1000000 ~~~ 1MB
            if (body.join("").length > 1e4) req.connection.destroy();
        });
        req.on('end', function () {
            var qs = require('querystring');
            var post = qs.parse(body.join(""));

            if(!(req.session.logged && req.session.level == 0)) {
                res.send(JSON.stringify({result:false,msg:"not logged."}));
                res.end();
                return;
            }
            
            var tmp_folder = __dirname + "/private/torito/tmp";
            var _path = require("path");
            tmp_folder = _path.normalize( tmp_folder );
            if(!mod.fs.existsSync(tmp_folder)) {
                mod.fs.mkdirSync(tmp_folder);
            }
            var spawn = require('child_process').spawn;
            var doc = mod.fs.readFileSync("./private/torito/lib/cs/screenshot.cs","utf8");
            console.log(doc);
            mod.fs.writeFileSync(tmp_folder + "/test.cs",doc,"utf8");
            var cargs = [
                "/t:exe",
                "/nologo"
            ]
            if(doc.indexOf("System.Drawing")!=-1) {
                cargs.push("/r:System.Drawing.dll");
            }
            if(doc.indexOf("System.Windows.Forms")!=-1) {
                cargs.push("/r:System.Windows.Forms.dll");
            }
            if(doc.indexOf("System.IO")!=-1) {
                cargs.push("/r:mscorlib.dll");
            }
            cargs.push("/out:" + tmp_folder + "/test.exe");
            cargs.push(tmp_folder + "\\test.cs");

            console.log(JSON.stringify(cargs));

            var child = spawn('C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe', cargs);
            var data = [];
            child.stdout.on('data', function(chunk) {
                data.push(chunk);
            });
            child.on('exit', (code) => {
                if(code == 0) {
                    var child2 = spawn(tmp_folder + '/test', []);
                    var data2 = [];
                    child2.stdout.on('data', function(chunk) {
                        data2.push(chunk);
                    });
                    child2.on('exit', (code) => {
                        mod.fs.unlinkSync(tmp_folder + "/test.exe");
                        mod.fs.unlinkSync(tmp_folder + "/test.cs");
                        res.json({result:true,msg:data2.join("")});
                        return;
                    });
                } else {
                    res.json({result:false,code:code,msg:data.join("")});
                    return;
                }
            });

        });
    };
})();